version: "3"

services:
  chirpstack:
    image: chirpstack/chirpstack:4.1
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
      - ./lorawan-devices:/opt/lorawan-devices
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    ports:
      - 8080:8080
    networks:
      example-network:
        ipv4_address: 172.16.238.10

  chirpstack-gateway-bridge-eu868:
    image: chirpstack/chirpstack-gateway-bridge:4.0.3
    restart: unless-stopped
    ports:
      - 1700:1700/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    depends_on: 
      - mosquitto
    networks:
      example-network:
        ipv4_address: 172.16.238.11

  chirpstack-rest-api:
    image: chirpstack/chirpstack-rest-api:4.1
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    ports:
      - 8090:8090
    depends_on:
      - chirpstack
    networks:
      example-network:
        ipv4_address: 172.16.238.12 

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
    networks:
      example-network:
        ipv4_address: 172.16.238.13

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      example-network:
        ipv4_address: 172.16.238.14

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - 1883:1883
    volumes: 
      - ./configuration/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      example-network:
        ipv4_address: 172.16.238.15

  influxdb:
    image: influxdb:2.6-alpine
    restart: unless-stopped
    env_file:
      - venti.env
    volumes:
      # Mount for influxdb data directory and configuration
      - influxdbv2:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
    networks:
      example-network:
        ipv4_address: 172.16.238.16

  telegraf:
    image: arm64v8/telegraf:1.25
    restart: unless-stopped
    depends_on:
      - influxdb
    volumes:
      # Mount for telegraf config
      - ./configuration/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    env_file:
      - venti.env
    networks:
      example-network:
        ipv4_address: 172.16.238.17

  grafana:
    image: grafana/grafana:12.0.0
    restart: unless-stopped
    env_file:
      - venti.env
    depends_on:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - ./configuration/grafana/:/etc/grafana
      - ./configuration/grafana/plugins/:/var/lib/grafana/plugins
    networks:
      example-network:
        ipv4_address: 172.16.238.18
   
  nginx:
    image: arm64v8/nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
       - ./configuration/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      example-network:
        ipv4_address: 172.16.238.19

  backend:
    image: flask
    container_name: flask-backend
    build:
      context: ./configuration/backend
    restart: unless-stopped
    env_file:
      - venti.env
    ports:
      - "5000:5000"
    privileged: true
    volumes:
      - "/run/dbus:/run/dbus"
      - "/run/systemd:/run/systemd"
    pid: "host"
    networks:
      example-network:
        ipv4_address: 172.16.238.20
      
networks:
  example-network:
    name: example-network
    driver: bridge
    ipam:
      driver: default
      config: 
        - subnet: 172.16.238.0/24
    

volumes:
  postgresqldata:
  redisdata:
  influxdbv2:
